buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }

  /*  dependencies {
        classpath "io.fabric.tools:gradle:$fabricToolsVersion"
    }*/
}

apply plugin: 'com.android.application'


repositories {
    google()
    jcenter()
    maven {
        url "https://github.com/QuickBlox/quickblox-android-sdk-releases/raw/master/"
    }
    maven { url 'https://maven.fabric.io/public' }
    flatDir { dirs 'libs' }
}

android {
    def versionQACode = 3

    compileSdkVersion 29
    flavorDimensions dimensionDefault

    dexOptions {
        javaMaxHeapSize "4g"
    }

    defaultConfig {
        applicationId "com.creditgaea"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName '1.0'
        multiDexEnabled true
    }

/*    productFlavors {
        dev {
            dimension dimensionDefault
            buildConfigField('boolean', "IS_QA", "false")
            buildConfigField("int", "VERSION_QA_CODE", versionQACode.toString())
        }

        qa {
            dimension dimensionDefault
            buildConfigField("boolean", "IS_QA", "true")
            buildConfigField("int", "VERSION_QA_CODE", versionQACode.toString())
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            shrinkResources false
            proguardFile 'proguard-rules.pro'
            zipAlignEnabled false
            resValue "string", "versionName", "QuickBlox Video Chat Java\nBuild version " + defaultConfig.getVersionName()
        }

        release {
            signingConfig signingConfigs.debug
            resValue "string", "versionName", "QuickBlox Video Chat Java\nBuild version " + defaultConfig.getVersionName()
        }
    }

    signingConfigs {
        debug {
            storeFile file("../cert/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }*/


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lint {
        abortOnError false
    }
}

dependencies {
    implementation "com.quickblox:quickblox-android-sdk-videochat-webrtc:$qbSdkVersion"
    implementation "com.quickblox:quickblox-android-sdk-messages:$qbSdkVersion"

    implementation "com.quickblox:quickblox-android-sdk-chat:$rootProject.qbSdkVersion"
    implementation "com.quickblox:quickblox-android-sdk-content:$rootProject.qbSdkVersion"

    implementation "androidx.fragment:fragment:$rootProject.fragmentAndroidXVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$rootProject.lifecycleViewmodelAndroidXVersion"
    implementation "androidx.core:core-ktx:$rootProject.coreKtxVersion"

    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:retrofit:2.1.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'

    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation "com.github.johnkil.android-robototextview:robototextview:$rootProject.robotoTextViewVersion"

    implementation 'com.timehop.stickyheadersrecyclerview:library:0.4.2@aar'
    implementation "com.google.firebase:firebase-core:$firebaseCoreVersion"
    implementation "com.navercorp.pulltorefresh:library:$pullToRefreshVersion@aar"
//    implementation("com.crashlytics.sdk.android:crashlytics:$crashlyticsVersion@aar") {
//        transitive = true
//    }
    implementation "com.google.android.material:material:$materialVersion"
    implementation "com.github.johnkil.android-robototextview:robototextview:$robotoTextViewVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation 'androidx.lifecycle:lifecycle-process:2.2.0'
}

apply from: "../artifacts.gradle"
apply plugin: 'com.google.gms.google-services'
